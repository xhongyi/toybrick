%!PS-Adobe-2.0
%%Creator: dvips(k) 5.993 Copyright 2013 Radical Eye Software
%%Title: srs_helper.dvi
%%CreationDate: Mon Jun 30 16:24:14 2014
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 365 252
%%DocumentFonts: CMR12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips srs_helper.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2014.06.30:1624
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMR12
%!PS-AdobeFont-1.0: CMR12 003.002
%%Title: CMR12
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR12.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR12 known{/CMR12 findfont dup/UniqueID known{dup
/UniqueID get 5000794 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR12 def
/FontBBox {-34 -251 988 750 }readonly def
/UniqueID 5000794 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR12.) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 57 /nine put
dup 70 /F put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9C535A5E57376651
F6823308463DC4E0339C78699AC82C769542FD3B410E236AF8AF68CF124D9224
FD6EE92A38075CAAF82447C7AF41EF96F3ADF62F76FB425BEDE4C4124E7B1E0B
8BF254D91912D3A99557F5427907A56514C5A3EB961B94112077FE9417B70DA0
B2E1C1FA3E1D6F01D11F640CF848E45BE3E205258E64FE36AFBD4DF4E93F6B1A
966C8E7FBE2CC8FF43C1F67BF6C361678B5E90F4BA524FE8A4CAD6AB28183E6E
CA6C9636E884845105595A2E40CDBE8D4807A81AF4DB77B31873FEB221BCADD4
2C4669459704CB58A7BC230FC59F867EEADE660E49AEEDEEB042BA9A7DD8193E
56C3A36A1F639F7EA512EE4BC6992F52C2FC82A890EFDA730105B0AF7B819295
EE00B48F64C2B5BCB275B1DD62F289CDAD4AD9B7EF057684642FA6FA6322C277
E779CAC36D78F7779CB6DE12638B3C65B70C6B5F8A8C6421A379719B8DD44973
5F52856A4A29B2ED37F2B1FBE6EF4B79B7C0CD6395C756A00FACD763C235914F
847D1D99831023CE1FD89EFEC83AA7E313131C0C197248605EF5BA773D0A4000
72F607551A8EA6F0FF19441ACA179177D1FF7B423FEBDF58B0C19CAE3C10EEF6
3538D8FC4762B77C5AA023A8186C40D0365A4487DC3564265B3DF908572DEAA2
57E29EC669DD72974F806EFF5ECAFA9ADF1F9D2A63087FB7BBD100F0F81C6FFB
B1EA1C9DD46548AEDD147EE64B1B4894972DAE1DC3E8569D6A3CEF9F9E46DEB7
547E10BB2959D374A33E47C58F1B20419920AB485F166062FCCC08EB5CC9AC88
F388F0C0155027B727729488E44CCABB7064A1432E179189C4627453C5231535
47D1F2B8BA43069696830CBB6E5F9A135CF22D3D1FE490A3A63C088EA32FF444
24A2427BBA63033DFE2E06DF8CE67949B6AB02F26335A376B57376814D2A7DE7
64A4347577EBE9A6E33DD2FC214A09C6D889C8FFBF1D567032548851B8F97204
49E215CC7D222F593E1EF1439ED60AD922D41E0E9EFB5CA48F2FEFF75AC5FEE7
FB6676D8B8D4DB6885FBE8B61B586313E4DAFB09D94CEDC0507E93000104F3DD
F83865A2C6F6A7DA8562BF86F5DB233CC9B53391273A1462E40876A8AC2B098A
DBADD5A160DEAC061F86A5FCCAB495EF8A9D121AF07928EAFD56F618E4EAEA97
CF89A3AFD406FC9DE1E9769C1E1EB83BB883786BC075EB5DA2692CD59C4DD7C1
7FD2FF9B18AC740A390C1DB38670DEB18C67721A1DCD502FE7368F47DB4281D5
459B3F020595FA3B10544AAE9EF786A0645FB7C9BB29D091E1432CD878A05918
1665643005BFD9A4B0FFD347ADC84CE22D6F9AD4EDC05E8C7179DCB360AB57D1
6ABCD200A4B4AD56825DC345984D9A3DE11CDA5E9EC1E5006EE4181E4EFE0846
67D8C27BEE8F84A1E01947E945BBE988702DEB2240C4BED952E433E5305484E5
71965D3DE95C4115FF78CE9EC18E323C599727C8B93CDFBCD1CCA780DB8C81ED
C4B5E596E1603624308972FFAE9A57B0EDB51FDDB6E23EDE2946F61BEB241345
2A192D8CAD53E823D687F9C64A70A4B4B703291FA6317C051DC6A44BCCE0288E
3839D726A8F2E39BFF429865E95C726E808E02CD06F36C1CC9AC77999F8E28BF
CE9D74B699CA982479E9D0DD98EAB24D29C981EF0349721D6819549A39413801
F80182D567EE316E2F0AB208068E15693E4C399A381BF9BBA625E597E6E109B8
16F3A84C8EC92F2ADE288821092A421A8D3B907048FE947230810F0777EE2542
29A3485223FEA079B359034F70464DAD2F0E420271A4E0CCF57A0ABBC20AB327
0CA71B292126D395E0D083B19BEC6B48A9DE2BF470C3D01A8C3F52075BD4BE02
A0C518355814478202FD4762EC542F8E7B9B1F7824F0554660CEB83E35635E1E
DF0D03C94C903ECB36B4948ED98B6324E0094EB1DF70863142D4ED3A932D7346
39D69F8F044B6084482D7748C27328AFD24A3A70B99D1F7D32CB984488672254
28B6A9E9DCA2C9FF6A1B311D72413404B3CE5428BDB7FF3C36357D7975184F56
FA6B32AD54C37D0AF7576663AB1397B80D4E998F0B4C4F6D90B483029EF2EDA9
D4C4204C1546EFF3100629453EAE01918D09FE104E626ABA38646F17B6A94CE8
116BC7A8D9C319434CA5B830859B4164DFADF1D7C3ECA5C78D8DEA930EA4AC3F
59DBBF3148C91A2E807FB934E3439D4F67C6DBBA9972854E6E3688E1E0A34B74
482217CFE031CD7B5DFEF727C3EF8DAEEEDA08F4C90289E62FB2AF2357EB2E45
4BC547980FD479101FFEEE477AAC6268DD659E8DD9E244676FD3C6909713B71A
323B211E571BE711D103FA23B5B9AF077D84E2D20FEE805E81D20C03501F0F17
C3B081946CD0FD577F00E50B76CC37CFA97A61B89C25DD43911B28857284BEBB
5BEC61FFE3A14C64BC5425A7A82326617F6F1FA4FEAE56071C9F559F91568179
46369B394A5CE96FB7420FF8AB7C61CB83492FA5AE4A4B0799578594C9EA67E1
E54498AA5CD6ABA34AD3417F04F5D8D664A7EB39D41E2D17643CAEBBCCD9C38C
C5C9541641A09335EFBCE0D276A54253EFD68141807A66F1DFEB4BEA5889FFA3
4D20BD52012206A9F8D3E0F6AFC03FDBBDF3E51506EC6336E249CEFB571AB84C
BDF8E471E3795C04E38A5306BA6D450D72E50910D1AC385BB06CCD4B8E433A32
5A4B7FACC976BB31FCAA1E62DB2C4FE06DDDE7367930E336B49F47DAD91C8735
9A35D80CA2E117E86B52E41E9278046ED923454989E48610ACB3B1663F197117
52659A9D7BFA561C7ACE0771794FC778675F83C5EDCB132AF124C7E6540A140B
E0A268836C73A3C746DC964E482E63C56C0D396515283970FBFF182F9F684FE2
655FD8F5D057D22246DDC3FD11B77552DB4D90ADBAB77BBB1FB1592129DE0AEC
F822D7D36E52BCDABBD560B403A5C56C5E1BE789C3AC049318C7FAC5E5861E42
FD66C3C0F46361078D7E036281682BCE9BBF77983C93ECBBEBA9B359769CA442
87FCA1B98F4EEC4935CC93B08AAADDF355C99816453587310F08C50B9BA3D107
5388A1F3AED2AE32BEFADF0285DA90436D1D7EA85D7B9B6DF2AC4B778CFADFF6
6EEE54D1A1C5DEE3CCA7EFF57A7C2931933CEED90CA26DAAB45E4388EC4DC366
B9E88518D6CF094861D2A59282044CC06E63EFB390A6DF4BA5EAC7CE39E1EE03
3D84099F5BE96612789AF3EDED07266EF10A0FC23EA1EA97040B6BAA63138B1A
A9CB8F5DED781260962D7618EDB200C3ED976033E8967A8CC676E9C11F74BE34
343A7ECE7EE97E8F76F7E95517A6D6163527406EF5A669535CB2BF4031F29046
BB2D0FFFB47A576F5EAB1D00A582965C56F28C00B3BB7BE2CC8D8391F789070D
775EB775437F0CD53DA840BB3575104B63E4B0BF14E3F14B320EDEF65FD4CAF5
8596DA491BBCF3153DED3B718F833D106432DF8DB8B8E6B34D5308C9010A5DD0
7E0E53260BB84BAB3EA748E8D72F75901604F80F4416920D69B4B983DCDB72C5
E9928F01A4A85954FD74578AE336C782CDF81D1EB7EBCEBFBAE7ED8AB4862584
397928F502D65139CCD582CF0723C5262EE54B9D2B8C39614652A8A90E1C3B65
7D26B99DA298FE4B9A7E98848F619C9BB4FF9FD215B72F99506F06355B332689
37D80AFD9F9ACD8172CDC51FCD3A759ACA0F7D4EBB07840840EE42C2D5B8B257
2C6DB3A7657B75F2F0B9730A20112745703E2D0FE709436CA6A5F36F59E64D9E
37C0A23D6D289E1AC1DA273872F5FC5C3DA2B127F078A4D7AB3FD7E124455817
DDC796D54EF26A1FBFD539D3A21B86DD4477DA49213259ABB3FF241424F2BE5F
89151E02FF87E0BEE26E85C0E518D8BE7CC9214B8E9A9EA1DBB49C6C212CCF08
90C0F23E9858947EE344062EBD9C574979087439975EAD4E85CD7BFAD3C91CF1
EFF577843AF1427D06CB2F3BB519ED1591974218C43F0D2038665F9E2E3960B7
FE68CD3CB2DB6B36C7997C6B21EC11CF1DE049541001FFF26D14C255E3AE862C
5A5701292FD2FB3D04523D6E2F3547923BB117718DFB6E6520F0D0B5450C695B
8C9242CC8671B7284CB2E1E9EB097A3DB1B4D5E8EEB93B4DC7E38C0A10474665
54DDCBAF079B92EA494F6FA75A84C5AAFE280284D0823D7C22249A21044BB0E6
4062074ECD17B62E03EDF4945A294BFEFB51F5FD870D9D7230FC91B83C1D85A8
86CDDF326FC90E04362145D6E8630C50594484FB829DA18F5C078F2EE67D2F2B
08DFF39AE2E8C9741FA989AE494C7166F122D2C5F71B97C973B7CE8500E9F87E
D59C30F2E99CC4D34713DAB680598F41955FBDC26A14CF1E73D6BD6B9AAC8D3B
B998F2D0D647356CD236DEAD6561389ED3A6746221B0CF15D6648412B35A6B54
6A0EF5BBB34AA376D9BAF025BFC650C1B74333CE85413D0EBB2F4D082A26A5BC
3C0A25D2B12CB159F140E00E262F1CFECCB2C802FF94CD34DA0CE9B4B3830FB1
DA85B9B670D5169928990A2E9CC869891CA2FFAD9774E6B92549644DAA5FE00C
A5BE4F5FF91A0B6D2FD8F96121D766391EC4ED3E73DADD476B7DAE1A50AFCD98
DB7E27E44D30416088D9BC07D4661D9ECEC0806830ABF14CE55AA3CA2DF66E8E
748B8ED46466F1EEB072AC0674FE6FED231E0DDA59ED7C42BC05EF00E176050A
C4834D893DE42474EA20DB1E25059E84BD137EF65A02CC295B0FFDE4CDE95879
0FE88BDF2519ABAE7F8CC3E6386ED35E04A14F1E3861922645E3A3F43B48A5AA
1999A5EFE192515FCC625C829FF5A7B337AA422F5E920545F9BB269C869A821D
6C4C26DD2AE746EF0F0B4C1E7E9871ADB5270E1CA9BE28225F7A0370D4C52422
E25263EE101C4EC1C7811B05AD42F364844A56BB91EE72FC8ED53CC6954D2BD6
F945D739BE4C61E36143CE890FC0CBF2F610018D678ECF7CEAB18FF5A0E48F76
FDE2463D40A99380D679B3B76D39C664F4992D23E5988B0D1AF33DFB04894016
E852EFD1EFFE586153C0F31ADBDBDE3F73FB49C5EE64D0D02E1504248FAFAC3D
903FD44679BB09C30288139B41B1E90A10139CA3172677250B16535A1F3E5E4B
6F4264DE58896E66051FC677030A121C5A285C47B6129CB5A3998830CE070D21
2F093FC1B44089F603A21F45F60960F134A47226874C737EF6C085634B0A4A66
139420501351F737A73F39D960EC38420BE46E5B09D298E7C16B8E32F01507D4
0141FC52DA1DE718D634AD9C8B00E46EEEF84356759324D2B9A3473C5DA38DE9
E30182B87F91B6A7F7BACF29A93B44C879CCDEDB063F9D2E51E0F1FC9F018FE1
2433D85AF24B55DE3A61C4D0A2DA4FDE933F5F6FDF17E9FA9932BFC46E2D71F6
585EEF5B2E4E89E797A24B799D7F064DD1A817A53677FC9EB8CC3E7F93FE50E8
D50E3191052943FD6C98B573BDD1F6D70349E1F8011599E3F8FDF1D6E80A710E
51E434E85801617C6FD8ACCF1B77B4BFCCDD35CB4C0367F4EB4D8D9DE8284D5E
B4F43E2F8320C2C5A9AE90ECBA7E65D377E91DB69FEF27069235366AD3E126C3
A73CE97F4C90BA00D206FA012C327FD69EE59AF4470A315B1799CDC0539BF90E
512C8FC3BEFE4D1B01D969EA9E3FEF976CD6E0FA4C9ECEC955B265CFD58AB8E5
F7371E479279EE14B689269205C5B506940606CF3E24A1E7EFF3CA96ED30AD6D
E243DE57690C3D69A401AB3315FA49E4BF4ACD4DD1CA39272533E82EFDD508E5
1C2CD286CCC5DE1202C7C7F654521750632EB637F918667E2233A43DF75239EB
F28F3129EB5DEE2FC5BFC331FF709B0FE9B327CBBCE98BCA2C861C6547E50407
1218CEBE6EB5F9BABA4F2E11BCC6FB553A544A567B459E06375102C69F8018DF
BA6A227CFB13E2D74E6A521E01B74F2963E9A0A1C9FD87A88EE6356E3BFABF55
BABC751D2BF85E6712E8EF57914920775906662E4BA68FFA21AD422D34E15578
43CA0568B431101A1194F8AB1EF25E886BFCDFC10F4A5EBD9530816548BC298E
AE4A0B6B52B8B59C644C409B4191B6F4203F52314F2675F02AEB65A72C66E92A
2AC703E15D8D381522C0AC30C165B822A9B8D18CAECC094EDE020756018DCF51
D0701B507519C4270B70D8CE94B436F640C15872F9B5B77892AA3D110E4D6A65
8F0815C61A5127BA25815378683F46E69E54A391A8675977E7DF9C2D4E6FA991
9F029E50CC2F266B31EE9F9F24452D5838905F330CB7E416B8AF836C5AC26AB8
BE2ECC6EA4BDAA08C30995709E225C21D35DB6369167602CBFA8DB2697635925
969002CD1BEE745DA2E56C17EF3F0C05E3847147F86963C37A221C8827195A8A
3D38993E4939AC915BFD9A212F5FF3F826F742B952018986F9FBDDB69C3AC65A
845F7F33C55D4BE60A1817EBBCA7E1538E8087E1BD5C083A320D52953BE65F31
E8339C612A510B59CE48D2EF7061560C4AD258E7DC59694493E3AC878246F37D
6DE89253EBC8830C6B209E818213C4AC4CF1F391AD91D57BE76FB0E2924A1407
E4A949C905E44F54EAED6419F13D59942C8079336A172D4758BEB5D3E786FB93
3CBE4FD2EB53E4E1DAC34E821EB30FD44BC6CB4298242C38F848FC23AEDC9733
52BE6F32E31E25F18301370F8936810B0566B664B042C7AE0D78ACF0A87E5BF6
F9B66E358168B2CEA30DCD940074F3ADB793CDB136161FE2522905E87B8E463F
95D4DAB7E14A3DF7BCCE8141C5A08FCFA2BCE9F2D1B05A7642E75877EB840149
AAB007CD239AE47AD115929427717F219B0A8907F0EC79ADE1B901DAEE87A2F8
39361DAB43DFFF69650F601B24061A9353CFD619FF9626F63275FD09A5B13BB4
8B3379EC4D147C41197E8387FC04DA7BE409524CEF74EA91DC066808A7FD0EF3
957A44E2503EDA67B1C61827479486134E922E560A673BF314D601C66003CD07
55569085AFC8428389A140EB976CCFB8F29E27587E46C413ABE2EFB51AF5913F
53EEB74063162E0BA1E24CEDCA320377D3E11BD374F0B44E132A5C35835B6E2C
D32948EF9DC7931D104C1385709DA882DED6458319F21C2329938396BC074106
CB9CFB9E0A915F8DBC8435F386917AC87A2BA45D857EC30ECA66FB4044F5439E
CDD556B82A0E43418D179AD883C85AC276E1190CEC242E3E1D86E725ADC39E46
BB6C47FE9E17E29F8EA81E870302A00D91434F3B7A05F243176E6EF1082541A1
B9052191EE5C2B8E94A2E02DB65FC769653CA8D1C07A13CB853544AEC7FC35C5
218DE3128AA31952DCE19C55C23FD69BCEA2C661F57B11B8F9E86BFA718D1521
3346E78C701A5E51923D6D937E62FDE3669B214D240538F069A100A542720A86
31DE88116DE775F7ACC2A49EA6C02A24408271A846990669F2AF60AFAB4C16F9
7F4E88E917F0FFDCE68F22998AC0AF2A60A73258C3A4BBC42A2F918123128195
196D0E150D79AC3CF4628503D1F3FC528265ED8324E56849A47B3B07C29940B9
1BC270071E221D355EA51E9942D3BD7F99816304FFFC8F5B036C953B38759341
ED5D7B9C8E6B70C409DD8362FD291201CC385E4A98D73E8518A4C0E544152563
82032FBD2FCB6E403D34B85ED4053A8CB619BDD4DE001F4C3007B1F317579651
E6D6662189CC2D95AB85D7473F65C5D7B4AC63B0FE928F3400035D5A9D443D0D
F3532B99F3AC26CB25EA3CD64C341159061E02EFBC7C033C05CD919BBD827A6A
BFCF3BD739E32E7FE909AEE068D50FAC33605FFF98C7D0115FB860178FD03DB9
7985B78E0AC21F2EA065FA841F5928FB85163B2E2D8F850DC7EE313912C45C28
2783F6762C67882EFEDDC7E7567F91C16B16FD8D5A1ABF35B5586307701B91AD
54984598F2AD46FEE3D68A2731BEAA754C8E730FE0E84952EF77930E4118F8D7
2F3AD7552AEBB973C2554AB370DFB96E6B60190746A00AA576C6D424350DF2FD
6E07300BD1B42A5873EDBFCC4393E13959F8CC772E08D6EFF3C133C983A7ECD8
036EDF65300A786D33DBD3E27D4E249FDEA5E0A6F2CF4E3BD47294DAE52649FC
9363A94BE9CD202FD4FCF67E2E70533EC7C7DF5AAA6EEF60B790F92916095192
B8CC353F8F58D7818749B18DD76A0089DE8132B15A1BB4600E407347E326C3B6
276631F05BC25799244B1295EAB6ACA85547C6703F2BF6FF027A6BE0D95AB2D0
4916B2C72316F671E2C5EB4417433E0FD3F0A167CB7188C2254191995ADC0FEF
001C0EF439972FBAAD42372E5179E1640876724A43F6C90077634B4ED0999CEF
2B34247DFB5D98C15E33A0F832B30BF3CEF39DDC9FF910F9BE8F1A7B9C01CD23
89793620DC060BEF760BFABEF67F762B1C3D3AA456200A20C809CC26343E9294
A7135891A27D4B93F29372F55D846C87B71C96621A83013F15EAABE933A81901
ABEA6564FD726D9C0B7BB94A1D25FCF66933504F147F9006298C9907E9BC69AF
C342A6A8493139DEA96456F44DBBA08B0245BD2B2013BC6B85A2E2F05BEE173F
E130AA777498C453AF70D7BF06CA9992C000E6C1D37817471BFE0B217FB54B19
75EADD6132C510490673CCED4FB647B0245D906FCB7ED9E186B6EC5A78CCA00C
B2447CA34137081D739371055E3FF93D1DFFBA2A36783E145B84723A0D6B9998
82A520F56592489245D67C9854B62C80542147A8CFD85A6F8CFA3A5DB74A86D7
31BFE680EF5B1E04FE5C0CE7AE3EE95A5B6224B60A5663A50B3823AC364550EA
E05BEA80C1FF3D7ED5F6D4A69F8834317ED69BBDC58F0F80521C55484FCB8EA8
091F5ED21B69FFB5F1EA07AF442D639A0F3BFC862B47613E6B8C4BC65B553ABA
AAF863927C60D4A5AA47891AF32E49E39A7B792EA7CEEE1A5BD38448136F8BD3
FD3DB77B81D7B9AF192010DCF0AB5AB60A2D9DDA7443379386AA2433B68A35BD
F02970793D628783221336948AA06B3E87076F230D73AA0BB037DAF1B2922E51
32E24AFBB176C84A51603473C0370061D3886482C1DE657A2D96CB8E2846BCF3
57AD48665B7D37EB3D59D6B0CA9CADA45813B070FE4784D606F4C77860D4D5CA
52F80DCB86D2DF18280366713D943A53A2531A684ACBEC808832395328723178
44003E47CE0BDD6151B48954460EDA6085CF2D85B1CE6FA551DDE25D294C5ADD
5D41BD0AE80EECB150138C9BF0AB5D0CD075D8C61D29B0474788DFDC6F811C50
74ED5E218D192F5BF0B9C8183EF304AE64F1D0BE866DA2C828ECE8CB9C4209C8
9D1F16DD75EC591F64A0FDF3C235B508C71714E8C70E58C43DE7F6392797F02D
CA1ED14B96064C7FE68C54E1F80F9678E9E1338AB9BB26AED8BD54DF5989EEEE
A85A48AFDC989EB31B37F5FD8C12E8BCA49DAA5AED394599AB811B4020215DA6
256F656AB5DAB62B818BF2D22E454E1229241BFDAE65CCC15B302A7236FAF2AE
BF7419B8E925B0A0217B02768A057FA8CAE6EBD089982119ABF7E7A169E9D02D
2EE6F9CF070DDC974B2EF7126D0286AA1D8D6D216A8DFA6EA700B2CDA2C8A639
97A4743B09859EBDA5134D6DF0B2F7DB1C06BCCF05E38E54E732E098C52BA81C
7C6F53FE10CEFE1A3BA365E63A4CEE0C72CE8D5F7EA27211490EBF6D30C022CF
A35B87366A84545343DFBC1E96148F9D75F40C10AFA45579A63A8FDD86940D68
16E6DE5CD3DBF3976C669C5DB3434E16CBA0F7C6659BBF4D297166822595CA0E
3995B9B746428E94B6F57FFEB7D97CA75400A399E4421CB3C9C61EAB995B1088
FCD217BC05EC173A2C94CE3F8ADBE617AA1A1BB44E99FA0A48A72AB37F83C75F
61B95BF1F893F238655D6EE61F504D4CD2AB1DE18886AECCFA98A9B71F06CED3
7D040956DF154DDDF1CE353749E0E28565DB6C95C837D4C5E92C6801428768A8
AE06F86F211AA9DB726B00503D1AEA326035A1465A1BCF6347FF661F509C9952
F6E45AFD00A134F3C3577E282855A4FA2DAB7A24BB4AEA77587EC76443D1DD99
F161A6095F7651A94C21920048B9A6928F3158A1A7FB2E29F2CEDAFEF1260277
915B5E751BF10BBB9B7587713B5557E2D420F99827A5C43721FBF0838CFC1E47
FDF3EE47EAC1C241743E2BFF0B6B3B677CBB10C816751F42E172C52A45BFB3BF
677AC4D57662AB2B870606514C7A1C0624EB282E03A86E701637AD1A4844B9E2
8E8538BD96BB067E443A89A932FB261682CFE36CAE4EE47E8E5078C0DBF50E90
594559CDA1596B12AC5CF4932F930BF82DEFCB60C9F2F4756DCF9EE16ABB8738
4C4F0CCEF23524BB2D869B088260AA906A19A391E9E0257F99471AA12F5544D4
29EBCE04478DB0ADA421F612959AA0A176E61D44341D118D991B3ABBD7873900
7226167FBE6AD3B7E6293005556A2DFB66758C9F8A25B2FC24C850BEF650A861
02650DBEC859855E8DF3487E65806A877315B21F3C32898719493BEC54589769
746276158053C06F6FF15242A9FD632E879139BDCF9FC686D7DE12444EBB65F0
A977C8109B04E8116DB31AFD1FFD592F7C997DE8F615C4968421B2C176F49F69
34D34B5A1AA9691F5A0101252C8A0109D77A7210DE6A909DCA361A6B684E2FC6
AB67F2435E9057379FC603F3DA81E6C53288E7C1838AB064E3911D5EB09F36D9
6813C16089B70063DE048992514F355CE0CC8CADA2268A1226035434E1A46DB1
B57C387AF0F67B9C1F621BB92A849CB9EFE0E6494E869E4F38DAE8D81231CDCE
163E04F13816C37725F36DE4D488FA8438CDBBBF9F7E24CDFC5B6BD37960905C
D9E3ED859FCFDCAAA6183F6A08FD5D4B0D5E3B3ECB1F8FA5057E09A0D819A2C8
E3474538F3B603EA8489EF53133BE0768A239094FBE015A87AA11E6862B9310A
3881277CF78BB4594EB53DD7557FB59682D19974F58A287F53C7E597D784BB07
EC91068495823596953D916C01B28717A5F71922C350C2E0EE05C90C487504F6
6D623554EAA2394BF14F74EBDE66DCCB9576513E93923304F8DEC626C4E265A0
0A10630000AAE03EA1CABD7931A279930CFCC4185C473CEADF4EB3424B40E1B2
878068DF46C3D56EA57BF844DE3C9E0A03D7ECC354F73EC1E7A3B458892A40A3
9353008728106FE74DCA04D53C21FB96D6581F03BBB8F6A4D933141DF5557EF4
2876F7CBA6C648B13527ECABFD8AB44D7911B718E1403BBEEA0829E6DEB27610
0077D5EBABD003F2E1B8D49D74AB5802FD2052BDBFC926ED1FB05513E929A9D2
448D26F5794F57DFC9D3A299705D2192D527AC5D8D72F89144F1C1EBA9ED515F
7621397C9E22BD34939BB798CBFEDF3AB14837C8D8BE6E01A2E6E88D21027BF6
CDD3F32B006F39BD8EA21BD32703EC05790C266900B803DCAB76CF18737ED2E9
8F4CBEFE5BD31C5B140C5CEB11551C5DC7FFC17CE8A161B5D1CC03F4C862E356
3549A2F1342C5D1512AFA65DD6172EECA923E58C8C4A0DBC836AECEEC75399B4
22FF59D1F4933AE8A5521AF96EC96E91B635FBB35EC60CBF7709AC760D39E810
FD121555B4EA5D7C811BAFF8720A31D8A204A4110A8C6A79126B90E7C91388F5
A704432E75B5BA3EEE8204AEFCE7F5FB52459B4E6033A4B494E79FD21CD8367B
CD1C8C354923B11AED08BB889674993106C682E0D9A3BB0ADB775EEAA069C587
396B1EEC73505746DEE434BF4F0071B95EEA96DD7B5B2FD9AF541835598B14AC
89E43CD1829595A125D51C2E600BD5387D72382AFD6886F60EA3E15881D4B990
1131102CAF79D6997093AC70A69DC3A66613EB892EB4781476C990DA5D0FA10F
0D4C30C1DD43E9DAAFEA9C0E1FC12C3208B9FF934AB8F94117D30A3C95E786C9
A904DDCF56FB0B3615F82C6B8B4B68FE1F67FE06D6C7543A3DA859E992B88230
667994664C8DDFEF810012295204706715F5ECA9DC0CE0CA0B8D5D0A7EB6D3D3
7F42D27BC412ACCB2D64A3F490C9DE7F2645983756EF673AFE889DBB94F0B55E
350AE136D580146093840B19887965A14A51D447B050AD7F7367AC8D686ACE93
6EABDFFC5E9C129B7F7D24D1208F5CEE76893CA085BDCC30D9B9F1BE503A6745
EE5A3F91044A33B65E321648DBF2E7C8DDBDEF56B30D5353005BAAC8D23E1814
1063563B19E0ABF4B625313B762AAA64699B91CE3708AFE2CDDC3639F8CBCDE4
33A6D5BD6D708C5516A3495FC37D92818AA98777D0486B8FEAD40BEA2B634ED2
01E6B1EC26630F1DB2D3873514098130BDD976C3137872CF6358A6C617C14E19
C3F8283B838AB5491E315F63E20AF5C35D323C3B516A2921A5B4D89DD87418B8
8B590ABF5E0BB3EB4165A09AE4524D3C6ED111720B4B46A7AB009FB180ECDE2B
364A1D1DFBB7B833451C98F722163EC02F6AD47AFCD678AD898D749DCE05AFCA
7A5E336AD9623AAF10E6C01DB8CAB143781CFEF6778C22AE28101A0AD3605185
E8228D69DA1F8D5D2E5EDBD4AA30970CD2CE7DD6B6F9A33AD8B99BC8CFC39328
1D378EFA19CAF67422EAA5AEEF1FA2DF0D5C84FA65383544DD8C2BC9AB3FCC26
BF5F4E104FD0B58642160AAD57C7725A5F4EEC02ECD50C6EF61CAC008B8B6091
05851B2E4F3DDC93F5C5E7B66F12C75C491AAC5C9F6CF9F7B68BAEB13A17B16E
16EB1CC6F0AF4873BB0EE9FF02F5EE017A99A45D19D4CE6CC70FF0E1A45F4803
3FACDD3148F55257ABB57BFAA1C5A9A3BAB410338BCDB1A528685D23FB9E3E8C
E338DD0911CA4BF5BFCAFDB01465EF4919F3AA17743A538DF4F17EF584756C6D
91AA1FED17DFD94CB63755E7B1A4FFA22673809F9D59E10F4D15162FB6ADE2AA
560E45F6E116E1E5F9D745107A8C84CA4EEA5B4DF8C84396BBBCCA60358FE7B2
4365549ED652DF04A8DFBD3B7DE17D5620B49414372E7AFD64E92D6E03DA735F
5DEF3900A0D59E61F978B8E638C9CDD5D863685BD85593820F0B5DE6FE5D5E7E
9CA104859CB2D6F10BED7C0C996017D987A5F44DA650E5F738A03B3F24F7A28F
1300DACD089AAD0440CC3D4E5E38DCA100BE19765045E1650DC3BC80063302E1
5B32A7517959F7C20F935B94D9066969BD746DE8837E14087522EC4AEDC6FD5A
D440597A4E81122CA62976203D2F59E8FC8A3FA1E7CBBB05ED20BC173121AEAE
76BD6D7FD974649CA34390C54EC8B619C6E86E72E47278B4F7844BB6332E1BAE
7C2CAD7FD708D8D49BE7E13E6291FFA87B59529284AF035C5C9DB45A634D4FE6
C9BB764180341A579309DB635467CB423CBFADAA6F062D6FEB7CCD5E92739392
1CC1B4ACBE5AA828A4F70028929FE5245DE025B1A78032F329F83D2D20925168
6EB70AC50110F7BA268EF324992A0656FF38994EEAB9A39CF897168C1E873F75
BDB67F525542C7D8899101A792750B83B33CF3DFBA4450303A5E09A7D4D6CAA6
25D4A37FA364029554360CEEB47431603F3F62E8B4D794DA4EDF3ACC989393C3
D3C5B80EC6C3C94821AA616919B873E7433A0F7AC104DFD307200058C408C182
CAE825A48F40CB343B502080C8857BCA6185C067769FD56CF6EFEE53B50AEC12
6D2173D1EA6C5BEA7BF87783B8FA7E564A395316D9EE5BC9423AA08E75CF6524
03E85E279E60AD9E1C54EF7C16DCA1ADCB18C20A7627E7E9E33491AEC52D74BB
6747FB3B2CE54BADB3F14FB050A87545128F4071F0ACD8A78B4A651D93B7A5B3
36EC18769378B1557C2849B8069099CF9261AD63352428D60866BB3C0562EF29
1929C9BDD4B1AE731BB339675042ACA776D9EBC2BD56B82102B40F838E9DCEA0
6AB279A4079021130A29D0C0B48C3558FD5D4470A9ACD58A1B5AF6F212C42F1F
6C09963FE156AAD09B58413720EFBCD7A14FB0C269B46608B96B0503D71B50DD
B956D02449B0CCF05402D708180A1B1BB67866B84F1BA63CE842F31ACC61658E
815DF950AB0762098E68DE7987BB55D05CDB38D6CC0AA9944208F5C7258E7700
0D58C91E6007ACC62E9E3D568775335F0AA768169C0AD324C54CCC5E67D15E63
DF93FB97DD36F6998FB86ACD0B556AAB90CA1180D47E64E822291D24A12E43C1
D1E0E8E6552A211CE37FBDB8104C2EF5BBDBAC1FC39D2F8B989E56985A6C7416
1D803FDA2095485C1EAEA32F9F81755171823926141BA6D6FF84142F2E6599A1
06FD0079986741EC36D528090F77514B53805CCC57275FE7B2DCF4342685F3A8
7A1A4497F4C79AD75ABF4E730F2CF443EBACCA0906DD0E040006FC56D7316305
9DE0F262B9656DB7E78563F1F6ACEA442E6677113AE8F1C591B59DC5963110AF
70C130F75E3995951A2D3682179BFC281FC16D3D06246AB32D52013D44A3BD53
EF869DD05ABCBAB92D784038358924F64E320A1BAB23D9FA96A4F42DE2D024D7
5AD412FE45BC6C03C90DDD568EB7FEE0BBABBA9DF7B9530DE5D2A8266B6B0C7D
0B825D8C420E51FE7FFBFFCB24600D381F89E277E57F44C6D5CFCBAD7A6329BF
A87708C0EBA6CCAD0AAC2525
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 23988814 16576558 1000 600 600 (srs_helper.dvi)
@start /Fa 137[62 1[46 46 46 2[59 65 1[33 2[33 65 2[52
65 52 1[59 12[85 65 86 1[80 9[76 12[59 2[59 59 59 59
59 59 59 48[{}26 119.552 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop
%%HiResBoundingBox: 0 0 366.04027pt 252.93823pt
 -561 1500 a @beginspecial @setspecial
 /gnudict 256 dict def gnudict begin /Color true def /Blacktext true
def /Solid false def /Dashlength 1 def /Landscape false def /Level1
false def /Rounded false def /ClipToBoundingBox false def /SuppressPDFMark
false def /TransparentPatterns false def /gnulinewidth 5.000 def /userlinewidth
gnulinewidth def /Gamma 1.0 def /BackgroundColor {-1.000 -1.000 -1.000}
def /vshift -66 def /dl1 {   10.0 Dashlength mul mul   Rounded { currentlinewidth
0.75 mul sub dup 0 le { pop 0.01 } if } if } def /dl2 {   10.0 Dashlength
mul mul   Rounded { currentlinewidth 0.75 mul add } if } def /hpt_
31.5 def /vpt_ 31.5 def /hpt hpt_ def /vpt vpt_ def /doclip {   ClipToBoundingBox
{     newpath 0 0 moveto 360 0 lineto 360 252 lineto 0 252 lineto closepath
    clip   } if } def /M {moveto} bind def /L {lineto} bind def /R
{rmoveto} bind def /V {rlineto} bind def /N {newpath moveto} bind def
/Z {closepath} bind def /C {setrgbcolor} bind def /f {rlineto fill}
bind def /g {setgray} bind def /Gshow {show} def   /vpt2 vpt 2 mul
def /hpt2 hpt 2 mul def /Lshow {currentpoint stroke M 0 vshift R Blacktext
{gsave 0 setgray show grestore} {show} ifelse} def /Rshow {currentpoint
stroke M dup stringwidth pop neg vshift R Blacktext {gsave 0 setgray
show grestore} {show} ifelse} def /Cshow {currentpoint stroke M dup
stringwidth pop -2 div vshift R Blacktext {gsave 0 setgray show grestore}
{show} ifelse} def /UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch
def   /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def /DL {Color {setrgbcolor
Solid {pop []} if 0 setdash}  {pop pop pop 0 setgray Solid {pop []}
if 0 setdash} ifelse} def /BL {stroke userlinewidth 2 mul setlinewidth
Rounded {1 setlinejoin 1 setlinecap} if} def /AL {stroke userlinewidth
2 div setlinewidth Rounded {1 setlinejoin 1 setlinecap} if} def /UL
{dup gnulinewidth mul /userlinewidth exch def dup 1 lt {pop 1} if 10
mul /udl exch def} def /PL {stroke userlinewidth setlinewidth Rounded
{1 setlinejoin 1 setlinecap} if} def 3.8 setmiterlimit /LCw {1 1 1}
def /LCb {0 0 0} def /LCa {0 0 0} def /LC0 {1 0 0} def /LC1 {0 1 0}
def /LC2 {0 0 1} def /LC3 {1 0 1} def /LC4 {0 1 1} def /LC5 {1 1 0}
def /LC6 {0 0 0} def /LC7 {1 0.3 0} def /LC8 {0.5 0.5 0.5} def /LTw
{PL [] 1 setgray} def /LTb {BL [] LCb DL} def /LTa {AL [1 udl mul 2
udl mul] 0 setdash LCa setrgbcolor} def /LT0 {PL [] LC0 DL} def /LT1
{PL [4 dl1 2 dl2] LC1 DL} def /LT2 {PL [2 dl1 3 dl2] LC2 DL} def /LT3
{PL [1 dl1 1.5 dl2] LC3 DL} def /LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2]
LC4 DL} def /LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def /LT6 {PL
[2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def /LT7 {PL [1 dl1 2 dl2 6 dl1 2
dl2 1 dl1 2 dl2] LC7 DL} def /LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1
2 dl2 2 dl1 4 dl2] LC8 DL} def /Pnt {stroke [] 0 setdash gsave 1 setlinecap
M 0 0 V stroke grestore} def /Dia {stroke [] 0 setdash 2 copy vpt add
M   hpt neg vpt neg V hpt vpt neg V   hpt vpt V hpt neg vpt V closepath
stroke   Pnt} def /Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V   currentpoint
stroke M   hpt neg vpt neg R hpt2 0 V stroke  } def /Box {stroke []
0 setdash 2 copy exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0
V 0 vpt2 V   hpt2 neg 0 V closepath stroke   Pnt} def /Crs {stroke
[] 0 setdash exch hpt sub exch vpt add M   hpt2 vpt2 neg V currentpoint
stroke M   hpt2 neg 0 R hpt2 vpt2 V stroke} def /TriU {stroke [] 0
setdash 2 copy vpt 1.12 mul add M   hpt neg vpt -1.62 mul V   hpt 2
mul 0 V   hpt neg vpt 1.62 mul V closepath stroke   Pnt} def /Star
{2 copy Pls Crs} def /BoxF {stroke [] 0 setdash exch hpt sub exch vpt
add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg 0 V closepath fill}
def /TriUF {stroke [] 0 setdash vpt 1.12 mul add M   hpt neg vpt -1.62
mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M   hpt neg vpt
1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def /TriDF {stroke [] 0 setdash vpt 1.12 mul sub M   hpt neg
vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V closepath
fill} def /DiaF {stroke [] 0 setdash vpt add M   hpt neg vpt neg V
hpt vpt neg V   hpt vpt V hpt neg vpt V closepath fill} def /Pent {stroke
[] 0 setdash 2 copy gsave   translate 0 hpt M 4 {72 rotate 0 hpt L}
repeat   closepath stroke grestore Pnt} def /PentF {stroke [] 0 setdash
gsave   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat   closepath
fill grestore} def /Circle {stroke [] 0 setdash 2 copy   hpt 0 360
arc stroke Pnt} def /CircleF {stroke [] 0 setdash hpt 0 360 arc fill}
def /C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def /C1
{BL [] 0 setdash 2 copy moveto 2 copy vpt 0 90 arc closepath fill vpt
0 360 arc closepath} bind def /C2 {BL [] 0 setdash 2 copy moveto 2
copy vpt 90 180 arc closepath fill vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto 2 copy vpt 0 180 arc closepath fill
vpt 0 360 arc closepath} bind def /C4 {BL [] 0 setdash 2 copy moveto
2 copy vpt 180 270 arc closepath fill vpt 0 360 arc closepath} bind
def /C5 {BL [] 0 setdash 2 copy moveto 2 copy vpt 0 90 arc 2 copy moveto
2 copy vpt 180 270 arc closepath fill vpt 0 360 arc} bind def /C6 {BL
[] 0 setdash 2 copy moveto 2 copy vpt 90 270 arc closepath fill vpt
0 360 arc closepath} bind def /C7 {BL [] 0 setdash 2 copy moveto 2
copy vpt 0 270 arc closepath fill vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto 2 copy vpt 270 360 arc closepath
fill vpt 0 360 arc closepath} bind def /C9 {BL [] 0 setdash 2 copy
moveto 2 copy vpt 270 450 arc closepath fill vpt 0 360 arc closepath}
bind def /C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc
closepath fill 2 copy moveto 2 copy vpt 90 180 arc closepath fill vpt
0 360 arc closepath} bind def /C11 {BL [] 0 setdash 2 copy moveto 2
copy vpt 0 180 arc closepath fill 2 copy moveto 2 copy vpt 270 360
arc closepath fill vpt 0 360 arc closepath} bind def /C12 {BL [] 0
setdash 2 copy moveto 2 copy vpt 180 360 arc closepath fill vpt 0 360
arc closepath} bind def /C13 {BL [] 0 setdash 2 copy moveto 2 copy
vpt 0 90 arc closepath fill 2 copy moveto 2 copy vpt 180 360 arc closepath
fill vpt 0 360 arc closepath} bind def /C14 {BL [] 0 setdash 2 copy
moveto 2 copy vpt 90 360 arc closepath fill vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill vpt 0 360
arc closepath} bind def /Rec {newpath 4 2 roll moveto 1 index 0 rlineto
0 exch rlineto neg 0 rlineto closepath} bind def /Square {dup Rec}
bind def /Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def /S2 {BL
[] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind
def /S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill
Bsquare} bind def /S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt
sub vpt Square fill Bsquare} bind def /S5 {BL [] 0 setdash 2 copy 2
copy vpt Square fill exch vpt sub exch vpt sub vpt Square fill Bsquare}
bind def /S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt
vpt2 Rec fill Bsquare} bind def /S7 {BL [] 0 setdash 2 copy exch vpt
sub exch vpt sub vpt vpt2 Rec fill 2 copy vpt Square fill Bsquare}
bind def /S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare}
bind def /S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare}
bind def /S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy
exch vpt sub exch vpt Square fill Bsquare} bind def /S11 {BL [] 0 setdash
2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec
fill Bsquare} bind def /S12 {BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt2 vpt Rec fill Bsquare} bind def /S13 {BL [] 0 setdash 2
copy exch vpt sub exch vpt sub vpt2 vpt Rec fill 2 copy vpt Square
fill Bsquare} bind def /S14 {BL [] 0 setdash 2 copy exch vpt sub exch
vpt sub vpt2 vpt Rec fill 2 copy exch vpt sub exch vpt Square fill
Bsquare} bind def /S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare}
bind def /D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind
def /D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def /D3
{gsave translate 45 rotate 0 0 S3 stroke grestore} bind def /D4 {gsave
translate 45 rotate 0 0 S4 stroke grestore} bind def /D5 {gsave translate
45 rotate 0 0 S5 stroke grestore} bind def /D6 {gsave translate 45
rotate 0 0 S6 stroke grestore} bind def /D7 {gsave translate 45 rotate
0 0 S7 stroke grestore} bind def /D8 {gsave translate 45 rotate 0 0
S8 stroke grestore} bind def /D9 {gsave translate 45 rotate 0 0 S9
stroke grestore} bind def /D10 {gsave translate 45 rotate 0 0 S10 stroke
grestore} bind def /D11 {gsave translate 45 rotate 0 0 S11 stroke grestore}
bind def /D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind
def /D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def /D15
{gsave translate 45 rotate 0 0 S15 stroke grestore} bind def /DiaE
{stroke [] 0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V  
hpt vpt V hpt neg vpt V closepath stroke} def /BoxE {stroke [] 0 setdash
exch hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2
neg 0 V closepath stroke} def /TriUE {stroke [] 0 setdash vpt 1.12
mul add M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62
mul V closepath stroke} def /TriDE {stroke [] 0 setdash vpt 1.12 mul
sub M   hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62
mul V closepath stroke} def /PentE {stroke [] 0 setdash gsave   translate
0 hpt M 4 {72 rotate 0 hpt L} repeat   closepath stroke grestore} def
/CircE {stroke [] 0 setdash   hpt 0 360 arc stroke} def /Opaque {gsave
closepath 1 setgray fill grestore 0 setgray closepath} def /DiaW {stroke
[] 0 setdash vpt add M   hpt neg vpt neg V hpt vpt neg V   hpt vpt
V hpt neg vpt V Opaque stroke} def /BoxW {stroke [] 0 setdash exch
hpt sub exch vpt add M   0 vpt2 neg V hpt2 0 V 0 vpt2 V   hpt2 neg
0 V Opaque stroke} def /TriUW {stroke [] 0 setdash vpt 1.12 mul add
M   hpt neg vpt -1.62 mul V   hpt 2 mul 0 V   hpt neg vpt 1.62 mul
V Opaque stroke} def /TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V   hpt 2 mul 0 V   hpt neg vpt -1.62 mul V
Opaque stroke} def /PentW {stroke [] 0 setdash gsave   translate 0
hpt M 4 {72 rotate 0 hpt L} repeat   Opaque stroke grestore} def /CircW
{stroke [] 0 setdash   hpt 0 360 arc Opaque stroke} def /BoxFill {gsave
Rec 1 setgray fill grestore} def /Density {   /Fillden exch def   currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def   /ColR ColR Fillden
mul Fillden sub 1 add def   /ColG ColG Fillden mul Fillden sub 1 add
def   /ColB ColB Fillden mul Fillden sub 1 add def   ColR ColG ColB
setrgbcolor} def /BoxColFill {gsave Rec PolyFill} def /PolyFill {gsave
Density fill grestore grestore} def /h {rlineto rlineto rlineto gsave
closepath fill grestore} bind def /PatternFill {gsave /PFa [ 9 2 roll
] def   PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add
translate   PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse   clip
  currentlinewidth 0.5 mul setlinewidth   /PFs PFa 2 get dup mul PFa
3 get dup mul add sqrt def   0 0 M PFa 5 get rotate PFs -2 div dup
translate   0 1 PFs PFa 4 get div 1 add floor cvi {PFa 4 get mul 0
M 0 PFs V} for   0 PFa 6 get ne { 0 1 PFs PFa 4 get div 1 add floor
cvi {PFa 4 get mul 0 2 1 roll M PFs 0 V} for  } if   stroke grestore}
def /languagelevel where  {pop languagelevel} {1} ifelse  2 lt {/InterpretLevel1
true def} {/InterpretLevel1 Level1 def}  ifelse /Level2PatternFill
{ /Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8
8] /XStep 8 /YStep 8} bind def /KeepColor {currentrgbcolor [/Pattern
/DeviceRGB] setcolorspace} bind def << Tile8x8  /PaintProc {0.5 setlinewidth
pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} >> matrix makepattern /Pat1 exch
def << Tile8x8  /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M
8 0 L stroke 0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke} >> matrix makepattern
/Pat2 exch def << Tile8x8  /PaintProc {0.5 setlinewidth pop 0 0 M 0
8 L 8 8 L 8 0 L 0 0 L fill} >> matrix makepattern /Pat3 exch def <<
Tile8x8  /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L 0 12 M 12 0
L stroke} >> matrix makepattern /Pat4 exch def << Tile8x8  /PaintProc
{0.5 setlinewidth pop -4 0 M 8 12 L 0 -4 M 12 8 L stroke} >> matrix
makepattern /Pat5 exch def << Tile8x8  /PaintProc {0.5 setlinewidth
pop -2 8 M 4 -4 L 0 12 M 8 -4 L 4 12 M 10 0 L stroke} >> matrix makepattern
/Pat6 exch def << Tile8x8  /PaintProc {0.5 setlinewidth pop -2 0 M
4 12 L 0 -4 M 8 12 L 4 -4 M 10 8 L stroke} >> matrix makepattern /Pat7
exch def << Tile8x8  /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
12 0 M -4 8 L 12 4 M 0 10 L stroke} >> matrix makepattern /Pat8 exch
def << Tile8x8  /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L -4 0
M 12 8 L -4 4 M 8 10 L stroke} >> matrix makepattern /Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def /Pattern2
{PatternBgnd KeepColor Pat2 setpattern} bind def /Pattern3 {PatternBgnd
KeepColor Pat3 setpattern} bind def /Pattern4 {PatternBgnd KeepColor
Landscape {Pat5} {Pat4} ifelse setpattern} bind def /Pattern5 {PatternBgnd
KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def /Pattern6
{PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind
def /Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse
setpattern} bind def } def /PatternBgnd {   TransparentPatterns {}
{gsave 1 setgray fill grestore} ifelse } def /Level1PatternFill { /Pattern1
{0.250 Density} bind def /Pattern2 {0.500 Density} bind def /Pattern3
{0.750 Density} bind def /Pattern4 {0.125 Density} bind def /Pattern5
{0.375 Density} bind def /Pattern6 {0.625 Density} bind def /Pattern7
{0.875 Density} bind def } def Level1 {Level1PatternFill} {Level2PatternFill}
ifelse /Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont dup
length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall currentdict
end definefont pop Level1 SuppressPDFMark or {} { /SDict 10 dict def
systemdict /pdfmark known not {   userdict /pdfmark systemdict /cleartomark
get put } if SDict begin [   /Title (spectrum_350_10_20_10_highin.tex)
  /Subject (gnuplot plot)   /Creator (gnuplot 4.6 patchlevel 4)   /Author
(john)   /CreationDate (Mon Jun 30 16:24:14 2014)   /DOCINFO pdfmark
end } ifelse end gnudict begin gsave doclip 0 0 translate 0.050 0.050
scale 0 setgray newpath BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt
or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill}
if 1.000 UL LTb LCb setrgbcolor 920 740 M 63 0 V 5856 0 R -63 0 V stroke
LTb LCb setrgbcolor 920 902 M 31 0 V 5888 0 R -31 0 V 920 1065 M 31
0 V 5888 0 R -31 0 V 920 1227 M 31 0 V 5888 0 R -31 0 V 920 1389 M
31 0 V 5888 0 R -31 0 V 920 1552 M 63 0 V 5856 0 R -63 0 V stroke LTb
LCb setrgbcolor 920 1714 M 31 0 V 5888 0 R -31 0 V 920 1877 M 31 0
V 5888 0 R -31 0 V 920 2039 M 31 0 V 5888 0 R -31 0 V 920 2201 M 31
0 V 5888 0 R -31 0 V 920 2364 M 63 0 V 5856 0 R -63 0 V stroke LTb
LCb setrgbcolor 920 2526 M 31 0 V 5888 0 R -31 0 V 920 2688 M 31 0
V 5888 0 R -31 0 V 920 2851 M 31 0 V 5888 0 R -31 0 V 920 3013 M 31
0 V 5888 0 R -31 0 V 920 3175 M 63 0 V 5856 0 R -63 0 V stroke LTb
LCb setrgbcolor 920 3338 M 31 0 V 5888 0 R -31 0 V 920 3500 M 31 0
V 5888 0 R -31 0 V 920 3662 M 31 0 V 5888 0 R -31 0 V 920 3825 M 31
0 V 5888 0 R -31 0 V 920 3987 M 63 0 V 5856 0 R -63 0 V stroke LTb
LCb setrgbcolor 920 4150 M 31 0 V 5888 0 R -31 0 V 920 4312 M 31 0
V 5888 0 R -31 0 V 920 4474 M 31 0 V 5888 0 R -31 0 V 920 4637 M 31
0 V 5888 0 R -31 0 V 920 4799 M 63 0 V 5856 0 R -63 0 V stroke LTb
LCb setrgbcolor 920 740 M 0 31 V 0 4028 R 0 -31 V 1343 740 M 0 31 V
0 4028 R 0 -31 V 1766 740 M 0 63 V 0 3996 R 0 -63 V stroke LTb LCb
setrgbcolor 2188 740 M 0 31 V 0 4028 R 0 -31 V 2611 740 M 0 31 V 0
4028 R 0 -31 V 3034 740 M 0 63 V 0 3996 R 0 -63 V stroke LTb LCb setrgbcolor
3457 740 M 0 31 V 0 4028 R 0 -31 V 3880 740 M 0 31 V 0 4028 R 0 -31
V 4302 740 M 0 63 V 0 3996 R 0 -63 V stroke LTb LCb setrgbcolor 4725
740 M 0 31 V 0 4028 R 0 -31 V 5148 740 M 0 31 V 0 4028 R 0 -31 V 5571
740 M 0 63 V 0 3996 R 0 -63 V stroke LTb LCb setrgbcolor 5993 740 M
0 31 V 0 4028 R 0 -31 V 6416 740 M 0 31 V 0 4028 R 0 -31 V 6839 740
M 0 63 V 0 3996 R 0 -63 V stroke LTb LCb setrgbcolor 1.000 UL LTb LCb
setrgbcolor 920 4799 N 920 740 L 5919 0 V 0 4059 V -5919 0 V Z stroke
LCb setrgbcolor LTb LCb setrgbcolor LTb 1.000 UP 1.000 UL LTb LCb setrgbcolor
1.000 UP 5.000 UL LT0 LCa setrgbcolor 920 3624 M 1343 1282 L 1766 863
L 422 -69 V 423 -17 V 423 -5 V 423 -2 V 423 0 V 422 2 V 423 2 V 423
2 V 423 3 V 422 3 V 423 4 V 423 4 V 920 3624 Pls 1343 1282 Pls 1766
863 Pls 2188 794 Pls 2611 777 Pls 3034 772 Pls 3457 770 Pls 3880 770
Pls 4302 772 Pls 4725 774 Pls 5148 776 Pls 5571 779 Pls 5993 782 Pls
6416 786 Pls 6839 790 Pls 1.000 UL LTb LCb setrgbcolor 920 4799 N 920
740 L 5919 0 V 0 4059 V -5919 0 V Z stroke 1.000 UP 1.000 UL LTb LCb
setrgbcolor stroke grestore end showpage


@endspecial 670 1471 a Fa(SRS)40 b(Threshold)-494 346
y
 gsave currentpoint currentpoint translate 630 rotate neg exch neg
exch translate
 -494 346 a -1055 376 a Fa(P)m(ercen)m(t)d(F)-10 b(alse)39
b(P)m(ositiv)m(e)-494 346 y
 currentpoint grestore moveto
 -494 346 a 2250 1305 a Fa(15)-647
b(12)-617 b(9)-588 b(6)h(3)-345 -470 y(50)-345 -131 y(40)-345
207 y(30)-345 545 y(20)-345 883 y(10)-286 1222 y(0)p
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
